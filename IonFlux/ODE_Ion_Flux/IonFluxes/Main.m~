% Model: track inside concentration of ionic species H, K, Cl and Na along time.

%% set simulation time
tfinal  = 1e4;                              % final time

%% configure integrator (check 'doc ode15s' for more info)
options = odeset('NonNegative',[1:6]);      % ensures variables stay positive 
                                            % (this is not always necessary 
                                            % but can be helpful, but make sure 
                                            % your system is actually a positive system!)

options = odeset(options, 'RelTol', 1e-9,...
                          'AbsTol', 1e-12);  % accuracy of integrator 
                                            % (here set to default values)

%% set parameters

Parameters;

%% set initial values [mol/Liter]
H_i0      = 1e-7;
K_i0      = 1e-4;
Cl_i0     = 1e-1;
Na_i0     = 1e-5;
ATP0      = 1;
ADP0      = 1e-5;

x0      = [H_i0, K_i0, Cl_i0, Na_i0, ATP0, ADP0]; % definition of the initial vector of variables

%% Loop over range of pH and ATP fluxes

v.pHe    = linspace(5 , 8 , 16);        % External pH
v.nu_ATP = linspace(0 , 40 , 21) * 1e9; % In ATP/hour/cell

for i = 1 : length(v.pHe)
    
    for j = 1 : length(v.nu_ATP)
        

%% simulate
[t,result] = ode15s(@(t,result) ODE(t,result,k),[0,tfinal],x0,options);

%% rename variables
% Time dynamics of each specie
H_i  = result(:,1);    % a = first column of result
K_i  = result(:,2);    % b = second column of result
Cl_i = result(:,3);    % ... 
Na_i = result(:,4);
ATP  = result(:,5);
ADP  = result(:,6);

% Membrane potentials
V_m = k.e * k.NA * k.V / (k.S * k.C_m) * (H_i + K_i - Cl_i + Na_i);

% Nernst potentials
Nernst = @(z , c_i , c_e) k.k_B * k.T ./ (z * k.e) * log(c_e ./ c_i);

V_H  = Nernst(k.z_H  , H_i  , k.H_e);
V_K  = Nernst(k.z_K  , K_i  , k.K_e);
V_Cl = Nernst(k.z_Cl , Cl_i , k.Cl_e);
V_Na = Nernst(k.z_Na , Na_i , k.Na_e);

% Osmotic pressure along time, [Joule/Liter] or [Pascal * 1e-3]
P_e = k.NA * k.k_B * k.T * (k.H_e + k.K_e + k.Cl_e + k.Na_e); % Osmolarity of the medium
P_i = k.NA * k.k_B * k.T * (H_i   + K_i   + Cl_i   + Na_i);   % Osmolarity of the cell
OP  = P_i - P_e;                                              % Osmotic pressure is the difference between the 2 osmolarities

    end
    
    e

ToPlot = 0;

if ToPlot == 0

% %% plot results
figure(1); clf; 
subplot(4,1,1)
plot(t,-log10(H_i)); ylabel('pH_i', 'fontsize', 14);

subplot(4,1,2)
plot(t,K_i); ylabel('K_i', 'fontsize', 14);

subplot(4,1,3)
plot(t,Cl_i); ylabel('Cl_i', 'fontsize', 14);

subplot(4,1,4)
plot(t,Na_i); ylabel('Na_i', 'fontsize', 14); xlabel('time', 'fontsize', 14)

figure(2);
plot(t,V_m); ylabel('V_m','fontsize',14)

end